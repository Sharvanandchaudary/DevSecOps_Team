name: Chamber Detection Test Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pre_chamber_deployment:
    runs-on: ubuntu-latest
    outputs:
      aws_changed: ${{ steps.setflags.outputs.aws_changed }}
      cc_changed: ${{ steps.setflags.outputs.cc_changed }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh jq

    - name: Try to reuse artifact from successful prior run (by commit SHA)
      id: download
      continue-on-error: true
      run: |
        echo "Looking up successful run for commit SHA: ${{ github.sha }}"
        
        run_id=$(gh api -H "Accept: application/vnd.github+json" \
          /repos/${{ github.repository }}/actions/runs \
          | jq -r --arg sha "${{ github.sha }}" \
            '.workflow_runs[] 
             | select(.head_sha == $sha and .name == "Chamber Detection Test Workflow" and .status == "completed" and .conclusion == "success") 
             | .id' | head -n 1)

        if [ -n "$run_id" ]; then
          echo "Found successful run ID: $run_id"
          gh run download "$run_id" -n changed-files
          if [ -f changed_files.txt ]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Reused changed_files.txt:"
            cat changed_files.txt
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
        else
          echo "exists=false" >> "$GITHUB_OUTPUT"
          echo "No successful prior run found."
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Detect changed files if not reusing
      if: steps.download.outputs.exists != 'true'
      run: |
        git diff --name-only HEAD~1 > changed_files.txt
        echo "Generated changed_files.txt:"
        cat changed_files.txt

    - name: Upload changed-files artifact
      if: steps.download.outputs.exists != 'true' && github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: changed-files
        path: changed_files.txt

    - name: Set AWS and CC flags
      id: setflags
      run: |
        AWS=false
        CC=false
        while IFS= read -r line; do
          if [[ "$line" == dn01/* ]]; then AWS=true; fi
          if [[ "$line" == dn02/* ]]; then CC=true; fi
        done < changed_files.txt

        echo "AWS: $AWS, CC: $CC"
        echo "aws_changed=$AWS" >> "$GITHUB_OUTPUT"
        echo "cc_changed=$CC" >> "$GITHUB_OUTPUT"

  aws_chamber_deployment:
    runs-on: ubuntu-latest
    needs: pre_chamber_deployment
    if: needs.pre_chamber_deployment.outputs.aws_changed == 'true'
    steps:
    - name: AWS Deployment Simulation
      run: echo "✅ Triggered AWS chamber deployment due to changes in dn01/*"

  cc_chamber_deployment:
    runs-on: ubuntu-latest
    needs: pre_chamber_deployment
    if: needs.pre_chamber_deployment.outputs.cc_changed == 'true'
    steps:
    - name: CC Deployment Simulation
      run: echo "✅ Triggered CC chamber deployment due to changes in dn02/*"
