name: Chamber Detection Test Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pre_chamber_deployment:
    runs-on: ubuntu-latest
    outputs:
      aws_changed: ${{ steps.setflags.outputs.aws_changed }}
      cc_changed: ${{ steps.setflags.outputs.cc_changed }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Try to reuse artifact from previous successful run (for rerun support)
      id: download
      continue-on-error: true
      run: |
        echo "Looking up previous successful run with the same commit SHA: ${{ github.sha }}"

        # Find all runs on this commit SHA
        run_id=$(gh api -H "Accept: application/vnd.github+json" \
          /repos/${{ github.repository }}/actions/runs \
          | jq -r --arg sha "${{ github.sha }}" \
            '.workflow_runs[] | select(.head_sha == $sha and .status == "completed" and .conclusion == "success") | .id' \
            | head -n 1)

        if [ -n "$run_id" ]; then
          echo "Found run: $run_id"
          gh run download "$run_id" -n changed-files
          if [ -f changed_files.txt ]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Reused artifact from run $run_id"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
            echo "No changed_files.txt found in artifact"
          fi
        else
          echo "exists=false" >> "$GITHUB_OUTPUT"
          echo "No successful runs found for this commit"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Detect changes if no artifact reused
      if: steps.download.outputs.exists != 'true'
      run: |
        echo "Detecting changes since previous commit..."
        git diff --name-only HEAD~1 > changed_files.txt
        echo "Detected files:"
        cat changed_files.txt

    - name: Upload artifact
      if: steps.download.outputs.exists != 'true' && github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: changed-files
        path: changed_files.txt

    - name: Set AWS and CC flags
      id: setflags
      run: |
        AWS=false
        CC=false
        while IFS= read -r line; do
          if [[ "$line" == dn01/* ]]; then AWS=true; fi
          if [[ "$line" == dn02/* ]]; then CC=true; fi
        done < changed_files.txt

        echo "AWS: $AWS, CC: $CC"
        echo "aws_changed=$AWS" >> $GITHUB_OUTPUT
        echo "cc_changed=$CC" >> $GITHUB_OUTPUT

  aws_chamber_deployment:
    runs-on: ubuntu-latest
    needs: pre_chamber_deployment
    if: needs.pre_chamber_deployment.outputs.aws_changed == 'true'

    steps:
    - name: Simulate AWS deployment
      run: echo "✅ AWS Chamber is being deployed due to changes in dn01"

  cc_chamber_deployment:
    runs-on: ubuntu-latest
    needs: pre_chamber_deployment
    if: needs.pre_chamber_deployment.outputs.cc_changed == 'true'

    steps:
    - name: Simulate CC deployment
      run: echo "✅ CC Chamber is being deployed due to changes in dn02"
