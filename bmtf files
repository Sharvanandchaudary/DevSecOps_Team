module "baremetal-vm" {
  for_each = {for node in local.baremetal_node_details : node.name => node}
  source   = "git::https://github.cadence.com/IT/terraform-openstack-vm.git?ref=v1.2.3"

  prefix        = local.cloud30_prefix
  instance_name = each.value.name
  legacyPrefix  = local.legacyPrefix
  image_id      = each.value.image
  volume_size   = each.value.volume_size != null ? each.value.volume_size : null
  region        = var.openstack_region
  flavor_name   = each.value.instance_type
  floating_ip   = null

  public_ssh_key     = local.securityObj.vm_ssh_pub_key
  security_group_map = {}
  additional_disks   = null != each.value.additional_volumes ? lookup(local.storageObj.ebs_volume_details, each.value.additional_volumes, {}) : {}
  port               = {
    network_id         = module.provider-network.network_id
    subnet_id          = module.provider-network.subnets_data[local.provider_subnets[0].name].id
    fixed_ip           = local.eni_subnet_mapping[each.value.eni_name].ip.public_ip
    pool               = "false"
    security_group_ids = [for sg in local.eni_port_sg_mapping[each.value.eni_name] : sg.id]
  }

  baremetal_port       = {
    network_id         = local.networkingObj.baremetal.network_id
    subnet_id          = local.networkingObj.baremetal.subnet_id
    fixed_ip           = null
    pool               = "false"
    security_group_ids = []
  }
  tags = local.tags

  user_data = base64encode(templatefile("user_data_copy.tftpl", {
    node_name               = local.legacyPrefix == null ? format("%s-%s-%s", local.cloud30_prefix, each.value.name, "vm") : format("%s%s", local.legacyPrefix, each.value.name)
    recipe_tar              = local.computeObj.compute_details.userdata_details.recipe_tar
    orchestrator_home       = local.computeObj.compute_details.userdata_details.orchestrator_home,
    env_relative_path       = var.env_dir
    region                  = var.region,
    mirror                  = local.computeObj.compute_details.userdata_details.mirror,
    mirror_dir              = local.computeObj.compute_details.userdata_details.mirror_dir,
    orchestrator_chef_dir   = local.computeObj.compute_details.userdata_details.chef_dir,
    chef_solo_embedded_path = local.computeObj.compute_details.userdata_details.chef_solo_embedded_path,
    orchestrator_log_path   = local.computeObj.compute_details.userdata_details.chef_log_path
    chef_solo_path          = local.computeObj.compute_details.userdata_details.chef_solo_path
    openstack_user          = var.swift_credentials.username
    openstack_pass          = var.swift_credentials.password
    openstack_auth_url      = var.openstack_auth_url
    openstack_prj_id        = var.openstack_project_id
    openstack_prj_name      = var.openstack_project_name
    openstack_region        = var.openstack_region
    openstack_user_domain   = var.openstack_user_domain_name
    openstack_prj_domain    = var.openstack_project_domain_name
    openstack_auth_version  = var.openstack_auth_version
  }))

  depends_on = [ null_resource.config_chef ]
}


resource "null_resource" "config_chef" {

  triggers = {
    always_run = timestamp()
  }
  provisioner "local-exec" {
    command     = <<-EOT
      ${local.settingsObj.local_env_details.python_version} main.py ${base64encode(templatefile("${path.module}/customer_base_config.tftpl", local.chef_settings))}
    EOT
    working_dir = "${path.module}/files/scripts/config_chef"
  }
}


















{
  "tags": {
    "hyperscaler": "rhops"
  },
  "environment": "test-2",
  "name_prefix": "to01",
  "openstack_project_id": "59c2d928ef6046069a0175d74dc3dc23",
  "openstack_project_name": "cc-test-oa-chm01-prj",
  "release" : "v2.0.10",
  "netapp_version": "2.0.1",
  "settings": {
    "hybrid_deployment": false,
    "aws_chamber_tfstate_key": "cloud30-chambers/config/envs/non-prod/dev/dc01/terraform.tfstate",
    "cc_chamber_json_s3_location": "s3://cadencecloud-mirrors-eu-central-1/projects/orchestrator/c30-cust/to01/awscbtb02slurm01/to01.json",
    "cc_hub_tfstate_key": "cloud30-openstack-shr/config/envs/non-prod/qa/test-2/to00/terraform.tfstate",
    "drm_cidr": "10.3.120.0/23",
    "aws_admin_cidr": "10.3.64.0/27",
    "aws_chamber_cidr": "10.3.66.0/23",
    "openstack_mgmt_ip": "10.107.178.0/24"
  },
  "compute": {
    "compute_details": {
      "node_details": {
        "ls01": {
          "image": "71e5ed26-05bc-4e6e-b107-d1eb3ab65a7f",
          "volume_size": 100,
          "enabled" : false,
          "additional_volumes" : "ls01_vol"
          
        },
        "haproxy": {
          "image": "fe8ba8c6-9c98-4f45-ba96-802ef7a37391",
          "volume_size": 100,
          "enabled" : false,
          "additional_volumes" : null
          
        },
        "wrk01": {
          "name": "wrk01",
          "instance_type": "baremetal",
          "image": "4a31915b-213a-4173-97ad-a582c72ff9f2",
          "volume_size": 100,
          "additional_volumes": null,
          "eni_name": "wrk01-eni"
        }
      }
    }
  },
  "storage": {
    "volume_type": "netapp_iscsi_enc",
    "ebs_volume_details": {
      "ls01_vol": {
        "scratch": {
          "disk": "tmp",
          "volume_size": 100,
          "device": "/dev/vdb"
        }
      }
    }
  },
  "networking": {
    "provider_vlan" : "1168",
    "provider_cidr" : "10.107.168.0/23",
    "baremetal" : {
      "network_id": "5c79a1a8-b294-4435-a2e6-ef1b992735d3",
      "subnet_id" : "c83e54b1-822e-4931-ac73-b731d1f6c966"
    },
    "customer_vpc": {
      "cidr_block": "10.154.180.0/23"
    },
    "customer_eni_mapping": {
      "haproxy-eni": {
        "ip": {
          "public_ip": "10.107.168.52",
          "hostnum": 52
        }
      },
      "wrk01-eni": {
        "name": "wrk01-eni",
        "subnet": "ComputeSubnet2a",
        "security_groups": [
          "Chm-AccessFromUtlSvr",
          "PrivateSG",
          "CLA-SG",
          "Platform-SG"
        ],
        "ip": {
          "private_ip" : "$${cc_chamber_internal_cidr}",
          "public_ip"  : "$${cc_chamber_cidr}",
          "hostnum" : 101
        }
      }
    }
  }
}




ame
to01-wrk01-vm
ID
6409a1b4-5255-4cc1-9e36-d6368c032497
Description
to01-wrk01-vm
Project ID
59c2d928ef6046069a0175d74dc3dc23
Status
Error
Locked
False
Availability Zone
-
Created
Aug. 12, 2025, 3:24 a.m.
Age
0 minutes
Fault
Message
No valid host was found.
Code
500
Details
Created
Aug. 12, 2025, 3:24 a.m.
Specs
Flavor Name
baremetal
Flavor ID
auto
RAM
1TB
VCPUs
128 VCPU
Disk
1787GB
IP Addresses
Security Groups
Not available
Metadata
Key Name
cloud30-default-kp
Image Name
cc-rhel86-baremetal-uefi
Image ID
4a31915b-213a-4173-97ad-a582c72ff9f2
env
test-2
hyperscaler
rhops
Volumes Attached



Yep — if you give me the outputs from these, I can pinpoint exactly why your baremetal is failing.

Run them in the same OpenStack project/region where Terraform is trying to build.

1) Show details of the flavor you used

bash
Copy
Edit
openstack flavor show baremetal -f yaml
2) List any baremetal nodes that are available

bash
Copy
Edit
openstack baremetal node list --provision-state available --maintenance False
3) For each available node, show its resource class and traits
First, pick one UUID from the above list, then run:

bash
Copy
Edit
openstack baremetal node show <NODE_UUID> -f yaml | egrep -i 'resource_class|traits'
(If there are multiple nodes, run it for each one.)

4) Show the image properties (to check deploy compatibility)

bash
Copy
Edit
openstack image show 4a31915b-213a-4173-97ad-a582c72ff9f2 -f yaml
5) Confirm the network and subnet exist for the baremetal port

bash
Copy
Edit
openstack network show 5c79a1a8-b294-4435-a2e6-ef1b992735d3
openstack subnet show  c83e54b1-822e-4931-ac73-b731d1f6c966
If you paste me these outputs, I can:

Check if your flavor maps to the node’s resource_class

Verify traits matching

Confirm the image deploy method

Ensure the network setup is valid for BM bring-up

Do you want me to also give you a one-liner script that loops through all available nodes and prints only the relevant info so you don’t have to run node show for each manually? That would speed up debugging.


vsaravan@sjcvl-ghrunner1:~$ openstack server delete 6409a1b4-5255-4cc1-9e36-d6368c032497
vsaravan@sjcvl-ghrunner1:~$ openstack flavor show baremetal -f yaml
OS-FLV-DISABLED:disabled: false
OS-FLV-EXT-DATA:ephemeral: 0
access_project_ids: null
description: null
disk: 1787
id: auto
name: baremetal
os-flavor-access:is_public: true
properties:
  resources:CUSTOM_BAREMETAL_LARGE: '1'
  resources:DISK_GB: '0'
  resources:MEMORY_MB: '0'
  resources:VCPU: '0'
ram: 1048576
rxtx_factor: 1.0
swap: 0
vcpus: 128



+------------------+------------------+---------------+-------------+--------------------+-------------+
| UUID             | Name             | Instance UUID | Power State | Provisioning State | Maintenance |
+------------------+------------------+---------------+-------------+--------------------+-------------+
| 16dec879-ba80-4c | baremetal-node-1 | None          | power off   | deploy failed      | False       |
| ac-8486-59318d68 |                  |               |             |                    |             |
| 8037             |                  |               |             |                    |             |
vsaravan@sjcvl-ghrunner1:~$ openstack baremetal node show <NODE_UUID> -f yaml | egrep -i 'resource_class|traits'
bash: NODE_UUID: No such file or directory
vsaravan@sjcvl-ghrunner1:~$ openstack baremetal node list | grep UUID
| UUID                                 | Name             | Instance UUID | Power State | Provisioning State | Maintenance |
vsaravan@sjcvl-ghrunner1:~$ openstack baremetal node show UUID
Node UUID could not be found. (HTTP 404)
vsaravan@sjcvl-ghrunner1:~$ openstack baremetal node show  baremetal-node-1 | grep 16d
| last_error             | Failed to prepare to deploy: No VIFs found for node 16dec879-ba80-4cac-8486-59318d688037 when attempting to update DHCP BOOT options|
| uuid                   | 16dec879-ba80-4cac-8486-59318d|
vsaravan@sjcvl-ghrunner1:~$ openstack baremetal node show  16dec879-ba80-4cac-8486-59318d688037 -f yaml | egrep -i 'resource_class|traits'
resource_class: BAREMETAL-LARGE
traits: []
vsaravan@sjcvl-ghrunner1:~$ openstack image show 4a31915b-213a-4173-97ad-a582c72ff9f2 -f yaml
checksum: 158fd33211308ee4b59f0ad7d8a03ea1
container_format: bare
created_at: '2025-08-07T08:43:14Z'
disk_format: qcow2
file: /v2/images/4a31915b-213a-4173-97ad-a582c72ff9f2/file
id: 4a31915b-213a-4173-97ad-a582c72ff9f2
min_disk: 100
min_ram: 0
name: cc-rhel86-baremetal-uefi
owner: 59c2d928ef6046069a0175d74dc3dc23
properties:
  os_hash_algo: sha512
  os_hash_value: 935f0070e81342d1e60e8536c599975f0ec2b3d4c366e9fb4fa7fbbc2e0d11a1d0c287067cb15e47167058e0465ff9ac7eb6f2b7f5cd7b6c174506b17549a01f
  os_hidden: false
  stores: default_backend
protected: false
schema: /v2/schemas/image
size: 6093275136
status: active
tags: []
updated_at: '2025-08-07T08:45:04Z'
virtual_size: 107374182400
visibility: private
vsaravan@sjcvl-ghrunner1:~$ openstack network show 5c79a1a8-b294-4435-a2e6-ef1b992735d3
+---------------------------+--------------------------------------+
| Field                     | Value                                |
+---------------------------+--------------------------------------+
| admin_state_up            | UP                                   |
| availability_zone_hints   |                                      |
| availability_zones        | nova                                 |
| created_at                | 2024-11-19T22:11:41Z                 |
| description               |                                      |
| dns_domain                |                                      |
| id                        | 5c79a1a8-b294-4435-a2e6-ef1b992735d3 |
| ipv4_address_scope        | None                                 |
| ipv6_address_scope        | None                                 |
| is_default                | None                                 |
| is_vlan_transparent       | None                                 |
| l2_adjacency              | True                                 |
| mtu                       | 1500                                 |
| name                      | provisioning                         |
| port_security_enabled     | True                                 |
| project_id                | 334ca1da01cc4820b35c604cb37a5c1e     |
| provider:network_type     | flat                                 |
| provider:physical_network | baremetal                            |
| provider:segmentation_id  | None                                 |
| qos_policy_id             | None                                 |
| revision_number           | 2                                    |
| router:external           | Internal                             |
| segments                  | None                                 |
| shared                    | True                                 |
| status                    | ACTIVE                               |
| subnets                   | c83e54b1-822e-4931-ac73-b731d1f6c966 |
| tags                      |                                      |
| tenant_id                 | 334ca1da01cc4820b35c604cb37a5c1e     |
| updated_at                | 2024-11-19T22:13:59Z                 |
+---------------------------+--------------------------------------+
vsaravan@sjcvl-ghrunner1:~$ openstack subnet show  c83e54b1-822e-4931-ac73-b731d1f6c966
+----------------------+--------------------------------------+
| Field                | Value                                |
+----------------------+--------------------------------------+
| allocation_pools     | 10.107.177.40-10.107.177.99          |
| cidr                 | 10.107.177.0/24                      |
| created_at           | 2024-11-19T22:13:59Z                 |
| description          |                                      |
| dns_nameservers      |                                      |
| dns_publish_fixed_ip | None                                 |
| enable_dhcp          | True                                 |
| gateway_ip           | 10.107.177.254                       |
| host_routes          |                                      |
| id                   | c83e54b1-822e-4931-ac73-b731d1f6c966 |
| ip_version           | 4                                    |
| ipv6_address_mode    | None                                 |
| ipv6_ra_mode         | None                                 |
| name                 | provisioning-subnet                  |
| network_id           | 5c79a1a8-b294-4435-a2e6-ef1b992735d3 |
| project_id           | 334ca1da01cc4820b35c604cb37a5c1e     |
| revision_number      | 0                                    |
| segment_id           | None                                 |
| service_types        |                                      |
| subnetpool_id        | None                                 |
| tags                 |                                      |
| updated_at           | 2024-11-19T22:13:59Z                 |
+----------------------+--------------------------------------+
vsaravan@sjcvl-ghrunner1:~$



1) Make sure the node is free (AVAILABLE)
bash
Copy
Edit
NODE="16dec879-ba80-4cac-8486-59318d688037"

openstack baremetal node show "$NODE" -f value -c provision_state -c last_error -c maintenance -c power_state

# If NOT 'available', do a safe reset:
openstack baremetal node maintenance set "$NODE" || true
openstack baremetal node abort "$NODE" || true
openstack baremetal node set "$NODE" --instance-info '{}' --instance-uuid "" || true
for vif in $(openstack baremetal vif list "$NODE" -f value -c ID 2>/dev/null || true); do
  openstack baremetal vif detach "$NODE" "$vif" || true
done
openstack baremetal node power off "$NODE" 2>/dev/null || true
openstack baremetal node maintenance unset "$NODE" || true
openstack baremetal node manage "$NODE" || true
openstack baremetal node provide "$NODE" || true
openstack baremetal node show "$NODE" -f value -c provision_state
2) Find your tenant/data network (CIDR/VLAN from tfvars)
bash
Copy
Edit
# You said provider_cidr is 10.107.168.0/23 and VLAN is 1168
openstack subnet list --long -f yaml | egrep -B2 -A5 'cidr: 10\.107\.168\.0/23|10\.107\.168'
# Pick the right subnet id, then:
TENANT_SUBNET_ID=<PUT_SUBNET_ID_HERE>
TENANT_NET_ID=$(openstack subnet show "$TENANT_SUBNET_ID" -f value -c network_id)
openstack network show "$TENANT_NET_ID" -f yaml | egrep -i 'name:|id:|provider:segmentation_id|provider:network_type|provider:physical_network|shared'
3) Quick test boot using a baremetal tenant port
bash
Copy
Edit
SERVER="to01-wrk01-vm"
IMG="4a31915b-213a-4173-97ad-a582c72ff9f2"
FLAVOR="baremetal"
KP="${OS_KEYPAIR}"

# Create a BM-friendly tenant port
openstack port create "${SERVER}-tenant-port" \
  --network "$TENANT_NET_ID" \
  --fixed-ip "subnet=${TENANT_SUBNET_ID}" \
  --vnic-type baremetal \
  --disable-port-security
TENANT_PORT_ID=$(openstack port show "${SERVER}-tenant-port" -f value -c id)

# Try image-boot once (keeps Cinder out of the equation for this test)
openstack server create "$SERVER" \
  --flavor "$FLAVOR" \
  --image "$IMG" \
  --nic "port-id=${TENANT_PORT_ID}" \
  --key-name "$KP"

# Watch it move out of ERROR/build:
watch -n 3 'openstack server show to01-wrk01-vm -f value -c status'
If that progresses (or at least avoids “No VIFs found”), we’ve proven the networking is the fix.

4) (Optional) Clean the test, then run your script with the same IDs
bash
Copy
Edit
# If you want to re-run via your script instead:
openstack server delete "$SERVER"; until ! openstack server show "$SERVER" &>/dev/null; do sleep 2; done
openstack port delete "${SERVER}-tenant-port" || true

# Export for your script so it uses tenant net (not provisioning)
export BAREMETAL_NET_ID="$TENANT_NET_ID"
export BAREMETAL_SUBNET_ID="$TENANT_SUBNET_ID"
./deploy_baremetal_wrk01.sh
If anything sticks, grab:

bash
Copy
Edit
openstack server show to01-wrk01-vm
openstack server event list to01-wrk01-vm
openstack console log show to01-wrk01-vm --lines 200
openstack baremetal node show "$NODE" -f yaml | egrep -i 'provision_state|last_error'
openstack baremetal vif list "$NODE"
and I’ll pinpoint the next move.

