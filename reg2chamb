#!/bin/bash
source /opt/usersync/app.env
rootdir="/opt/ldapsync"
binpath="/opt/ldapsync/bin"
logpath=$rootdir"/logs"
#binpath="/data/opendj/bin/"
dt=`date "+%Y_%b_%d_%T"`
logile="chamberldapsync.log"
RegionalLDAP=`echo $CHAMBER_0_LDAP_URL| cut -d ":" -f 1`
REGIONAL_SITE=`hostname | cut -c 1-4` 
RegionalLDAPPW=`openssl passwd -1 -salt $REGIONAL_SITE $LDAP_PW_BASE |cut -d "$" -f4`
VCAD_BASEDN="ou=vcad,ou=services,o=cadence.com"
CORPEMP_BASEDN="ou=people,o=cadence.com"
CHBEMP_BASEDN="o=cadence.com"
ChamberLDAPUser="cn=directory manager"
RegionalLDAPUser="cn=directory manager"


RegVCADLDIF="RegVCAD.ldif"
RegVCADEMPLDIF="RegVCADEmp.ldif"
OutLDIF="OutVCAD.ldif"
ChamberLDIF="Chamber.ldif"
RegionalLDIF="Regional.ldif"
RegEMPLDIF="RegEMP.ldif"
#Not including login shell otherwise it will overide in chamber LDAP
EmpAttrs="objectclass mail sn cn givenName homeDirectory gecos gidNumber uidNumber uid displayName o shadowLastChange" 
#ADMIN="mana@cadence.com arul@cadence.com nishant@cadence.com"


sping() {

                OT=`/usr/bin/ping -c1 $1 > /dev/null; echo $?`
                if [[ "$OT" != 0 ]];then
                                echo "$dt : ERROR Server $1 not reachable.... Alerting & Exit !!!" >> $logpath/$logile
                                echo ""|mail -s "Failed: LDAP SYNC Server not reachable : $1 : Exiting !!!" $ADMIN
                                exit 101
                else
                                echo "$dt : Success Server $1 is reacheable...." >> $logpath/$logile
                fi
}

createLDIF() {
                local ldapHost=$1
                local ldapUser=$2
                local ldapPw=$3
                local basedn=$4
                local ldifFile=$5
                local vcadaccess=$6
                echo "ldapHost=$ldapHost ,  ldapUser=$ldapUser ,  basedn=$basedn,  ldifFile=$ldifFile , $vcadaccess"

                echo "$dt : Generating source server cooperate LDIF !!!" >> $logpath/$logile
                if [[ $vcadaccess ]] ; then
                    echo "Inside vcadaccess "
                    /usr/bin/ldapsearch -x -o ldif-wrap=no -h "$ldapHost" -D "$ldapUser" -b "$basedn" -w "$ldapPw"  "$vcadaccess" -LLL  $EmpAttrs > $logpath/$ldifFile
              
                else
                    echo "else vcadaccess"
                    /usr/bin/ldapsearch -x -o ldif-wrap=no -h "$ldapHost" -D "$ldapUser" -b "$basedn" -w "$ldapPw" -LLL  $EmpAttrs > $logpath/$ldifFile
                fi
                if test -f $logpath/$ldifFile; then
                                echo "$dt :LDIF generated ( $ldifFile )with total DNs : `grep "^dn" $logpath/$ldifFile|wc -l`" >> $logpath/$logile
                else
                                echo "$dt : ERROR Failed to generate  LDIFF $ldifFile" >> $logpath/$logile
                                #echo ""|mail -s "Failed to generate Corporate Server VCAD Tree  LDIF : $SourceServer : Exiting !!!" $ADMIN
                                exit 102
                fi

}

diffLDIF() {
                local source=$1
                local destination=$2
                local out=$3
                local chamber=$4
                cat $binpath/system_users.ldif > $logpath/$chamber.ldif
                echo "cn=$chamber,ou=group,o=cadence.com"  >> $logpath/$chamber.ldif
                echo "$dt : Generating DIFF LDIF" >> $logpath/$logile

                $binpath/ldif-diff -o $logpath/$out -s $logpath/$destination -t $logpath/$source -e $logpath/$chamber.ldif
                rm -rf $logpath/$chamber.ldif
                if test -f $logpath/$out; then
                    echo "$dt : DIFF $out LDIF generated with total DNs : `grep "^dn" $logpath/$out|wc -l`" >> $logpath/$logile

                else
                    echo "$dt : ERROR Failed to generate DIFF LDIF $out" >> $logpath/$logile
                    #echo ""|mail -s "Failed to generate DIFF LDIF for VCAD Sync ... Exiting !!!" $ADMIN
                    
                fi
}

modify() {
                local difffile=$1
                local ChamberLDAP=$2
                local ChamberLDAPUser=$3
                local ChamberlLDAPPW=$4
                WC=`grep "^# No differences" $logpath/$difffile|wc -l`
                if  [[ "$WC" == 1 ]];then
                    echo "$dt : No changes found in Source and Target $difffile LDIF ... " >> $logpath/$logile
                    #exit 104
                else
                    echo "$dt : Modifying LDAP Destination Server $ChamberLDAP with `grep "^dn" $logpath/$difffile|wc -l` changes... " >> $logpath/$logile
                    /usr/bin/ldapmodify -c -xh $ChamberLDAP -D "$ChamberLDAPUser" -w $ChamberlLDAPPW -f $logpath/$difffile > $logpath/ldapmodify_reg.log 2>&1
                    OT_mod=`echo $?`
                    if [[ "$OT_mod" == 0 ]];then
                                    echo "$dt : Modification succesful at Destination Server $ChamberLDAP" >> $logpath/$logile
                                    #cat $logpath/ldapmodify.log|mail -s "LDAP SYNC : `grep '^dn' $logpath/$difffile|wc -l` records updated from $SourceServer to $RegionalLDAP" 
                    else
                                    echo "$dt : Modification failed with errors please for $ChamberLDAP " >> $logpath/$logile
                                    #cat $logpath/ldapmodify.log|mail -s "LDAP SYNC : `grep '^dn' $logpath/DIFF.ldif|wc -l` records updated from $SourceServer to $DestServer" $ADMIN
                                    #echo ""|mail -s "Failed: VCAD LDAP SYNC Modification with errors please check $logpath/ldapmodify-$dt.log" $ADMIN
                    fi
                fi
}

rotate() {
                
                local regional=$1
                local chamber=$2
                local out=$3
                echo "$dt : Rotating files to $dt timestamp" >> $logpath/$logile
                mv $logpath/$regional $logpath/$dt-$regional
                mv $logpath/$chamber $logpath/$dt-$chamber
                mv $logpath/$out $logpath/$dt-$out

                echo "$dt : Rotation completed & script completed successfully @ `date`" >> $logpath/$logile
}


if [[ `pgrep -f "/bin/bash $0"` != "$$" ]]; then
        echo "Another instance of shell already exist! Exiting"
        exit
fi


####Create LDIF Files for Processing
CHAMBER_DIR_PREFIX=/var/yp/src
CHAMBER_PATTERN=`hostname | cut -c 1-2`
CURRENT_DIRS=($(ls ${CHAMBER_DIR_PREFIX}/ |grep $CHAMBER_PATTERN))
echo "LIST is  ${CURRENT_DIRS[@]}"
for dir in ${CURRENT_DIRS[@]};          
do
	echo "DIR is ${dir}" >> $logpath/$logile  
    if test -f $CHAMBER_DIR_PREFIX/${dir}/.sync; then
         
        VCAD_CHAMBER_BASEDN="ou=$dir,$VCAD_BASEDN"
        VCAD_PEOPLE_BASEDN="ou=customers,$VCAD_BASEDN"   
        CHAMBER_LDAP="${dir}ls01"
        
        SSH_RESP=$(ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no "${dir}ls01" python3 /opt/orchestrator/run_chef/generate_ldap_passwd.py $dir g0C4d3nc3 2>&1)
        if [[ $? == 0 && ${SSH_RESP} != *"orchestrator"* ]]; then
                echo "[info] Chamber -> ${dir} LDAP node is up, processing..."
                ChamberLDAPPW=$SSH_RESP
                echo "$dt : Start syncing chamber ${dir} from regional LDAP for $VCAD_CHAMBER_BASEDN  @ `date`"
                echo "$dt : Start syncing chamber ${dir} from regional LDAP for $VCAD_CHAMBER_BASEDN  @ `date`" >> $logpath/$logile
                ##Create Regional LDIF for that chamber
                createLDIF "$RegionalLDAP" "$RegionalLDAPUser" "$RegionalLDAPPW" "$VCAD_CHAMBER_BASEDN" "${dir}-$RegVCADLDIF"
                createLDIF "$RegionalLDAP" "$RegionalLDAPUser" "$RegionalLDAPPW" "$VCAD_PEOPLE_BASEDN" "${dir}-$RegVCADEMPLDIF" "vcadaccess=${dir}"
                createLDIF "$RegionalLDAP" "$RegionalLDAPUser" "$RegionalLDAPPW" "$CORPEMP_BASEDN" "${dir}-$RegEMPLDIF" "vcadaccess=${dir}"
                cat $logpath/${dir}-$RegVCADLDIF $logpath/${dir}-$RegEMPLDIF $logpath/${dir}-$RegVCADEMPLDIF > $logpath/tmp1_${dir}-$RegionalLDIF                
                sed "s/ou=${dir},ou=vcad,ou=services,//g" $logpath/tmp1_${dir}-$RegionalLDIF > $logpath/tmp2_${dir}-$RegionalLDIF
                sed "s/ou=customers,ou=vcad,ou=services,/ou=people,/g" $logpath/tmp2_${dir}-$RegionalLDIF > $logpath/${dir}-$RegionalLDIF
                rm -rf $logpath/tmp1_${dir}-$RegionalLDIF $logpath/tmp2_${dir}-$RegionalLDIF $logpath/${dir}-$RegVCADLDIF $logpath/${dir}-$RegEMPLDIF $logpath/${dir}-$RegVCADEMPLDIF
                ##Create LDI for Chamber
                createLDIF "$CHAMBER_LDAP" "$ChamberLDAPUser" "$ChamberLDAPPW" "$CHBEMP_BASEDN" "${dir}-$ChamberLDIF"
                #####Find Difference 
                diffLDIF "${dir}-$RegionalLDIF" "${dir}-$ChamberLDIF" "${dir}-$OutLDIF" "$dir"
                #modify "${dir}-$OutLDIF" "$CHAMBER_LDAP" "$ChamberLDAPUser" "$ChamberLDAPPW"
                rotate "${dir}-$RegionalLDIF" "${dir}-$ChamberLDIF" "${dir}-$OutLDIF"
        else
                echo "[error] Chamber -> ${dir} LDAP node is down, skipping..."
                continue
        fi

    fi
	

done
